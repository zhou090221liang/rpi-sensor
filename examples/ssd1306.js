// var i2c = require('i2c-bus'),
//     i2cBus = i2c.openSync(1),
//     oled = require('oled-i2c-bus');
// //   var font = require('oled-font-5x7');


// var font = {
//     monospace: false,
//     width: 5,
//     height: 7,
//     fontData: [
//         0x00, 0x00, 0x00, 0x00, 0x00, // (space)
//         0x00, 0x00, 0x5F, 0x00, 0x00, // !
//         0x00, 0x07, 0x00, 0x07, 0x00, // "
//         0x14, 0x7F, 0x14, 0x7F, 0x14, // #
//         0x24, 0x2A, 0x7F, 0x2A, 0x12, // $
//         0x23, 0x13, 0x08, 0x64, 0x62, // %
//         0x36, 0x49, 0x55, 0x22, 0x50, // &
//         0x00, 0x05, 0x03, 0x00, 0x00, // '
//         0x00, 0x1C, 0x22, 0x41, 0x00, // (
//         0x00, 0x41, 0x22, 0x1C, 0x00, // )
//         0x08, 0x2A, 0x1C, 0x2A, 0x08, // *
//         0x08, 0x08, 0x3E, 0x08, 0x08, // +
//         0x00, 0x50, 0x30, 0x00, 0x00, // ,
//         0x08, 0x08, 0x08, 0x08, 0x08, // -
//         0x00, 0x60, 0x60, 0x00, 0x00, // .
//         0x20, 0x10, 0x08, 0x04, 0x02, // /
//         0x3E, 0x51, 0x49, 0x45, 0x3E, // 0
//         0x00, 0x42, 0x7F, 0x40, 0x00, // 1
//         0x42, 0x61, 0x51, 0x49, 0x46, // 2
//         0x21, 0x41, 0x45, 0x4B, 0x31, // 3
//         0x18, 0x14, 0x12, 0x7F, 0x10, // 4
//         0x27, 0x45, 0x45, 0x45, 0x39, // 5
//         0x3C, 0x4A, 0x49, 0x49, 0x30, // 6
//         0x01, 0x71, 0x09, 0x05, 0x03, // 7
//         0x36, 0x49, 0x49, 0x49, 0x36, // 8
//         0x06, 0x49, 0x49, 0x29, 0x1E, // 9
//         0x00, 0x36, 0x36, 0x00, 0x00, // :
//         0x00, 0x56, 0x36, 0x00, 0x00, // ;
//         0x00, 0x08, 0x14, 0x22, 0x41, // <
//         0x14, 0x14, 0x14, 0x14, 0x14, // =
//         0x41, 0x22, 0x14, 0x08, 0x00, // >
//         0x02, 0x01, 0x51, 0x09, 0x06, // ?
//         0x32, 0x49, 0x79, 0x41, 0x3E, // @
//         0x7E, 0x11, 0x11, 0x11, 0x7E, // A
//         0x7F, 0x49, 0x49, 0x49, 0x36, // B
//         0x3E, 0x41, 0x41, 0x41, 0x22, // C
//         0x7F, 0x41, 0x41, 0x22, 0x1C, // D
//         0x7F, 0x49, 0x49, 0x49, 0x41, // E
//         0x7F, 0x09, 0x09, 0x01, 0x01, // F
//         0x3E, 0x41, 0x41, 0x51, 0x32, // G
//         0x7F, 0x08, 0x08, 0x08, 0x7F, // H
//         0x00, 0x41, 0x7F, 0x41, 0x00, // I
//         0x20, 0x40, 0x41, 0x3F, 0x01, // J
//         0x7F, 0x08, 0x14, 0x22, 0x41, // K
//         0x7F, 0x40, 0x40, 0x40, 0x40, // L
//         0x7F, 0x02, 0x04, 0x02, 0x7F, // M
//         0x7F, 0x04, 0x08, 0x10, 0x7F, // N
//         0x3E, 0x41, 0x41, 0x41, 0x3E, // O
//         0x7F, 0x09, 0x09, 0x09, 0x06, // P
//         0x3E, 0x41, 0x51, 0x21, 0x5E, // Q
//         0x7F, 0x09, 0x19, 0x29, 0x46, // R
//         0x46, 0x49, 0x49, 0x49, 0x31, // S
//         0x01, 0x01, 0x7F, 0x01, 0x01, // T
//         0x3F, 0x40, 0x40, 0x40, 0x3F, // U
//         0x1F, 0x20, 0x40, 0x20, 0x1F, // V
//         0x7F, 0x20, 0x18, 0x20, 0x7F, // W
//         0x63, 0x14, 0x08, 0x14, 0x63, // X
//         0x03, 0x04, 0x78, 0x04, 0x03, // Y
//         0x61, 0x51, 0x49, 0x45, 0x43, // Z
//         0x7D, 0x12, 0x12, 0x7D, 0x00, // Ä
//         0x3D, 0x42, 0x42, 0x42, 0x3D, // Ö
//         0x3D, 0x40, 0x40, 0x40, 0x3D, // Ü
//         0x00, 0x00, 0x7F, 0x41, 0x41, // [
//         0x02, 0x04, 0x08, 0x10, 0x20, // "\"
//         0x41, 0x41, 0x7F, 0x00, 0x00, // ]
//         0x04, 0x02, 0x01, 0x02, 0x04, // ^
//         0x40, 0x40, 0x40, 0x40, 0x40, // _
//         0x00, 0x01, 0x02, 0x04, 0x00, // `
//         0x20, 0x54, 0x54, 0x54, 0x78, // a
//         0x7F, 0x48, 0x44, 0x44, 0x38, // b
//         0x38, 0x44, 0x44, 0x44, 0x20, // c
//         0x38, 0x44, 0x44, 0x48, 0x7F, // d
//         0x38, 0x54, 0x54, 0x54, 0x18, // e
//         0x08, 0x7E, 0x09, 0x01, 0x02, // f
//         0x08, 0x14, 0x54, 0x54, 0x3C, // g
//         0x7F, 0x08, 0x04, 0x04, 0x78, // h
//         0x00, 0x44, 0x7D, 0x40, 0x00, // i
//         0x20, 0x40, 0x44, 0x3D, 0x00, // j
//         0x00, 0x7F, 0x10, 0x28, 0x44, // k
//         0x00, 0x41, 0x7F, 0x40, 0x00, // l
//         0x7C, 0x04, 0x18, 0x04, 0x78, // m
//         0x7C, 0x08, 0x04, 0x04, 0x78, // n
//         0x38, 0x44, 0x44, 0x44, 0x38, // o
//         0x7C, 0x14, 0x14, 0x14, 0x08, // p
//         0x08, 0x14, 0x14, 0x18, 0x7C, // q
//         0x7C, 0x08, 0x04, 0x04, 0x08, // r
//         0x48, 0x54, 0x54, 0x54, 0x20, // s
//         0x04, 0x3F, 0x44, 0x40, 0x20, // t
//         0x3C, 0x40, 0x40, 0x20, 0x7C, // u
//         0x1C, 0x20, 0x40, 0x20, 0x1C, // v
//         0x3C, 0x40, 0x30, 0x40, 0x3C, // w
//         0x44, 0x28, 0x10, 0x28, 0x44, // x
//         0x0C, 0x50, 0x50, 0x50, 0x3C, // y
//         0x44, 0x64, 0x54, 0x4C, 0x44, // z
//         0x20, 0x55, 0x54, 0x55, 0x78, // ä
//         0x3A, 0x44, 0x44, 0x3A, 0x00, // ö
//         0x3A, 0x40, 0x40, 0x3A, 0x00, // ü
//         0x00, 0x08, 0x36, 0x41, 0x00, // {
//         0x00, 0x00, 0x7F, 0x00, 0x00, // |
//         0x00, 0x41, 0x36, 0x08, 0x00, // }
//         0x14, 0x3E, 0x55, 0x41, 0x22, // €
//         0x08, 0x08, 0x2A, 0x1C, 0x08, // -> (ALT + 0134) † 
//         0x08, 0x1C, 0x2A, 0x08, 0x08, // <- (ALT + 0135) ‡
//         0x00, 0x00, 0x07, 0x05, 0x07  // °
//     ],
//     lookup: [' ', '!', '"', '#', '$', '%', '&', "'", '(', ')', '*', '+', ',', '-', '.', '/',
//         '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?', '@',
//         'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
//         'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'Ä', 'Ö', 'Ü', '[', '\\', ']', '^', '_', '`',
//         'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
//         'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'ä', 'ö', 'ü', '{', '|', '}', '€', '†', '‡', '°'
//     ]
// };

// var opts = {
//     width: 128,
//     height: 64,
//     address: 0x3C
// };

// var oled = new oled(i2cBus, opts);

// oled.turnOnDisplay();
// oled.clearDisplay();


// // oled.setCursor(1, 1);
// oled.writeString(font, 2, '18:01:58', 1, true);






// setTimeout(() => {
//     oled.clearDisplay();
// }, 5000);


Date.prototype.Format = function (fmt) { //author: meizz
    var o = {
        "M+": this.getMonth() + 1, //月份
        "d+": this.getDate(), //日
        "h+": this.getHours(), //小时
        "m+": this.getMinutes(), //分
        "s+": this.getSeconds(), //秒
        "q+": Math.floor((this.getMonth() + 3) / 3), //季度
        "S": this.getMilliseconds() //毫秒
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o)
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
    return fmt;
}

const sensor = require('../index');
const ssd1306 = new sensor.SSD1306(1, 0x3C, 128, 64);
//打开显示器
ssd1306.oled.turnOnDisplay();
setInterval(() => {
    ssd1306.oled.clearDisplay();
    const date = new Date().Format('yyyy-MM-dd');
    const time = new Date().Format('hh:mm:ss');
    console.log("显示:", date,time);
    ssd1306.oled.setCursor(1, 1);
    ssd1306.oled.writeString(ssd1306.font, 2, date, 1, true);
    ssd1306.oled.setCursor(1, 16);
    ssd1306.oled.writeString(ssd1306.font, 2, time, 1, true);
}, 1000);
